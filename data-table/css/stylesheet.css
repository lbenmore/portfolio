* {
	position: relative;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	transition: transform 0.3s;
}

[contenteditable]:focus {
	outline: none;
	box-shadow: 0px 0px 6px blueviolet;
}

::selection {
	background-color: blueviolet;
	color: white;
}

body {
	--vh: 1vh;
	
	width: 100vw;
	min-height: 100vh;
	min-height: calc(var(--vh) * 100);
	font-family: sans-serif;
	font-size: 14px;
	line-height: 1.3;
}

h1 {
	font-weight: 100;
	letter-spacing: 0.4em;
	text-transform: lowercase;
}

header {
	display: table;
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 60px;
	background: blueviolet;
	color: white;
	z-index: 1;
}

header > * {
	display: table-cell;
	vertical-align: middle;
}

header > h1 {
	text-align: center;
}

header nav {
	width: 60px;
	height: 60px;
	transform: translateZ(0);
}

header nav > label {
	display: block;
	width: 100%;
	height: 100%;
	z-index: 1;
}

header nav > label span {
	display: block;
	top: 50%;
	margin-top: -1px;
	left: 50%;
	margin-left: -12px;
	width: 24px; 
	height: 1px;
	background-color: white;
}

#toggleMenu:checked ~ header nav > label span {
	transform: rotate(45deg);
}

header nav > label span::before,
header nav > label span::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: inherit;
	transition: inherit;
}

#toggleMenu:checked ~ header nav > label span::before,
#toggleMenu:checked ~ header nav > label span::after {
	transform: rotate(-90deg);
}

header nav > label span::before {
	transform: translateY(-8px);
}

header nav > label span::after {
	transform: translateY(8px);
}

header ul {
	display: block;
	position: fixed;
	top: 60px;
	right: 0;
	width: 200px;
	height: calc(100vh - 60px);
	border-left: 1px solid blueviolet;
	background: white;
	color: black;
	list-style: none;
	transform: translateX(100%);
}

#toggleMenu:checked ~ header ul {
	transform: translateX(0);
}

header li {
	display: block;
	position: relative;
	padding: 12px;
	border-bottom: 1px solid rgba(0, 0, 0, 0.15);
	cursor: pointer;
}

header li span {
	display: block;
	margin-top: 8px;
	width: 48px;
	height: 24px;
	border-radius: 12px;
	background-color: #f04;
	transition: background-color 0.3s;
}

header li span::before {
	content: '';
	display: block;
	position: absolute;
	width: 24px;
	height: 100%;
	border-radius: inherit;
	background-color: #ccc;
	transition: transform 0.3s;
}

main {
	top: 60px;
	padding: 16px;
	width: 100%;
	height: calc(100vh - 60px);
	overflow-x: auto;
}

table {
	table-layout: fixed;
	border-spacing: 0;
	margin-right: 16px;
	width: 100%;
}

th,
td {
	padding: 8px;
	width: 200px;
	border: 1px solid currentcolor;
	background-color: white;
}

th.freeze,
td.freeze {
	position: sticky;
	z-index: 1;
}

th[data-sort] {
	padding-left: 16px;
	border-color: currentcolor;
}

th[data-sort]::before {
	content: '';
	position: absolute;
	top: calc(50% - 4px);
	transform: translateX(-16px);
}

th[data-sort='asc']::before {
	border-right: 6px solid transparent;
	border-bottom: 8px solid currentcolor;
	border-left: 6px solid transparent;
}

th[data-sort='dsc']::before {
	border-top: 8px solid currentcolor;
	border-right: 6px solid transparent;
	border-left: 6px solid transparent;
}

th span::before {
	content: 'Ã˜';
	display: inline-block;
	position: relative;
	margin-left: 8px;
	cursor: pointer;
}

.message {
	position: fixed;
	top: 16px;
	right: 16px;
	padding: 16px;
	background-color: #08f;
	color: white;
	width: 240px;
	min-height: 100px;
	border-radius: 4px;
	z-index: 2;
	opacity: 0;
	user-select: none;
	transform: translateX(calc(100% + 32px));
	transition: transform 0.5s, opacity 0.5s;
}

.message.active {
	opacity: 1;
	transform: translateX(0);
}

.message.error {
	background-color: #f04;
}

.message.success {
	background-color: springgreen;
	color: #333;
}

/** dark mode **/
body[data-theme="dark"] {
	background-color: #333;
	color: white;
}

body[data-theme="dark"] header ul {
	background-color: #333;
	color: white;
}

body[data-theme="dark"] header li {
	border-color: rgba(255, 255, 255, 0.15);
}

body[data-theme="dark"] th,
body[data-theme="dark"] td {
	background-color: #333;
}

body[data-theme="dark"] header li span {
	background-color: #0f8;
}

body[data-theme="dark"] header li span::before {
	transform: translateX(100%);
}